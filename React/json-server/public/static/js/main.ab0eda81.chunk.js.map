{"version":3,"sources":["components/LoadingComponent.js","shared/baseURL.js","components/MenuComponent.js","components/HomeComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","shared/leaders.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderCard","item","in","tranformProps","exitTranform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","RenderDish","console","log","RenderComments","comments","postComment","dishId","comment","author","DishDetail","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","chekee","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","Component","Footer","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleBlur","field","evt","touched","handleSubmit","values","JSON","stringify","resetFeedbackForm","role","model","Row","md","Col","text","placeholder","validators","classname","show","messages","minlength","size","offset","checkbox","select","p","textarea","color","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","path","component","filter","featured","promotions","promo","leaders","exact","match","parseInt","params","commentsErrMess","addComment","withRouter","connect","dispatch","rating","newComment","date","Date","toISOString","fetch","method","body","header","credentials","then","response","ok","error","Error","status","statusText","message","json","catch","actions","reset","Dishes","action","Comments","concat","Promotions","LEADERS","abbr","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","React","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab0eda81.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading=()=>{\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pusle fa-3x fa-fw text-primary\"></span>\n            <p>Loading ...</p>                                                                                                                                                                                                                                                            \n        </div>\n        \n\n    );\n};\n\nexport default Loading;","// Configuration file for server communication\nexport const baseUrl = 'http://localhost:3001/'","import React from 'react';\nimport {Card,CardImgOverlay,CardTitle, CardImg, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseURL';\n\n\n\n    function RenderMenuItem({dish, onClick}){\n        return(\n\n            <Card>\n                <Link to={`/menu/${dish.id}`}>           \n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt = {dish.name}/> \n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n\n                </Link>\n            </Card>\n\n\n        );\n    }\n\n    //Another Way to Define a functional Component\n\n    const Menu = (props) =>{\n\n        const menu =props.dishes.dishes.map((dish)=>{\n            return (\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish} />\n                </div>\n                    \n            );\n        });\n\n        if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading/>\n                    </div>\n                </div>\n            )\n        }\n        else if(props.dishes.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else\n            return(\n\n                \n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to =\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className = \"col-12\">\n                            <h3>Menu</h3>\n                            <hr/>\n                        </div>\n                        \n                    </div>\n\n\n\n                    <div className=\"row\">\n                            {menu}\n                    </div>\n                </div>\n            );\n\n    }\n\n        \n\nexport default Menu;","import React from 'react';\nimport {Card,CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseURL';\nimport {FadeTransform} from 'react-animation-components';\n\n\nfunction RenderCard({item, isLoading, errMess}){\n    if(isLoading){\n        return(\n            <Loading/>\n\n        )\n    }\n    else if (errMess) {\n        return(\n        <h4>{errMess}</h4>\n        );\n    }\n    else\n        return(\n\n            <FadeTransform in \n                tranformProps ={{\n                    exitTranform: 'scale(0.5) translateY(-50%)' \n            }}>\n\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt= {item.name}/>\n                        <CardBody>\n                            <CardTitle>{item.name}</CardTitle>\n                                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\n                                <CardText>{item.description}</CardText>\n                        </CardBody>\n                </Card>\n            </FadeTransform>\n\n        );\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                                isLoading={props.dishesLoading} \n                                errMess={props.dishesErrMess}/> \n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                    isLoading={props.promosLoading} \n                    errMess={props.promosErrMess}/> \n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                    isLoading={props.dishesLoading} \n                    errMess={props.dishesErrMess}/> \n                </div>\n\n\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport {Card,CardText,CardBody,CardTitle, CardImg, Breadcrumb,BreadcrumbItem} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// import {Control,LocalForm,Errors} from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseURL';\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\n    function RenderDish({dish}){\n\n        console.log(\"Dish detail render invoked\")\n        \n        \n        if(dish !=null){\n            return(\n                <div className=\"col-12 col-sm-12 col-md-5 m-1\">\n                    <FadeTransform in \n                    tranformProps ={{\n                        exitTranform: 'scale(0.5) translateY(-50%)' \n                }}>\n                        <Card>\n                            <CardImg width=\"100%\" src={baseUrl + dish.image} alt = {dish.name}/>\n                            <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                                <CardText>{dish.description}</CardText>\n                            </CardBody>\n                        </Card>\n                    </FadeTransform>\n                </div>\n            );\n\n        }\n        else{\n            return(\n                <div></div>\n            );\n        }\n    }\n\n\n\n    function RenderComments({comments,postComment,dishId}){\n\n            if(comments!=null)\n                return (\n                    <div className = \"col-12 col-md-5 m-1\">\n                        <ul className=\"list-unstyled\">\n\n                            <Stagger in>\n\n                                {comments.map((comment) => {\n                                    return(\n                                        <li key={comment.id}>\n                                            <p>{comment.comment}</p>\n                                            <p>--{comment.author}</p>\n                                        </li>\n                                    );\n                                })}\n                            </Stagger>\n\n                        </ul>\n\n                           {/* <CommentForm dishId={dishId} addComment={addComment}/> */}\n\n\n                    </div>\n                )\n    }\n\n    \n\n    const DishDetail= (props) => {\n        \n        if(props.isLoading){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading/>\n                    </div>\n                </div>\n            )\n        }\n        else if(props.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            )\n            \n        \n\n        }\n\n        if(props.dish!=null)\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        \n                        <BreadcrumbItem><Link to =\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className = \"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr/>\n                    </div>\n                    \n                </div>\n                <div className=\"row\">\n                        <RenderDish dish = {props.dish}/>\n                        <RenderComments comments = {props.comments}\n                            postComment={props.postComment}\n                            dishId={props.dish.id}/>\n                </div>\n            </div>\n        );\n    }\n\nexport default DishDetail;","import React, {Component} from 'react';\nimport {Navbar,Input, Form,FormGroup, Label,NavbarBrand,Jumbotron, Nav, NavbarToggler,Collapse, NavItem, Button, Modal, ModalBody,ModalHeader} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props){\n        super(props);\n            this.state={\n                isNavOpen:false,\n                isModalOpen:false\n            };\n            this.toggleNav =this.toggleNav.bind(this);\n            this.toggleModal=this.toggleModal.bind(this);\n            this.handleLogin=this.handleLogin.bind(this);\n        \n    }\n\n    toggleNav() {\n        this.setState({isNavOpen: !this.state.isNavOpen});\n    }\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen \n\n        })\n    }\n\n   \n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username: \" +this.username.value + \" Password: \" + this.password.value \n            + \"Remember: \" + this.remember.chekee);\n        event.preventDefault();\n\n        \n    }\n\n\n    render(){\n\n        return(\n            <>\n            <Navbar dark expand = \"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand className=\"ml-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\n                                alt =\"Sandys Food Service\"/>\n                        </NavbarBrand>\n\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n\n                                <Nav navbar>\n                                    <NavItem>\n                                        <NavLink className =\"nav-link\" to=\"/home\"> \n                                            <span className=\"fa fa-home fa-lg\"></span> Home\n                                        </NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink className =\"nav-link\" to=\"/aboutus\"> \n                                            <span className=\"fa fa-info fa-lg\"></span> About\n                                        </NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink className =\"nav-link\" to=\"/menu\"> \n                                            <span className=\"fa fa-list fa-lg\"></span> Menu\n                                        </NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink className =\"nav-link\" to=\"/contactus\"> \n                                            <span className=\"fa fa-address-card fa-lg\"></span> Contact\n                                        </NavLink>\n                                    </NavItem>\n\n                                </Nav>\n                                <Nav className=\"ml-auto\" navbar>\n                                    <NavItem>\n                                        <Button outline onClick={this.toggleModal}>\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                        </Button>\n                                    </NavItem>\n                                </Nav>\n\n                        </Collapse>\n                    </div>\n\n            </Navbar>\n            <Jumbotron>\n                <div className=\"container\">\n                    <div className=\"row row-header\">\n                        <div className=\"col-12 col-sm-6\">\n                            <h1>Sandy's Food Service</h1>\n                            <p>We take inspiration from the World's best cuisines.</p>\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </Jumbotron>\n\n\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                        <FormGroup>\n                            <Label htmlFor=\"username\">Username</Label>\n                            <Input type=\"text\" id=\"username\" name=\"username\"\n                                innerRef= {(input) => this.username =input}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label htmlFor=\"username\">Username</Label>\n                            <Input type=\"password\" id=\"password\" name=\"password\"\n                                innerRef= {(input) => this.password =input}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label check>\n                                <Input type=\"checkbox\" name=\"remember\" \n                                    innerRef= {(input) => this.remember =input}/>\n                                Remember Me\n\n                            </Label>\n                        </FormGroup>\n                        <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">\n\n                        </Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n            </>\n\n\n        )\n\n    }\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\n\n\nfunction Footer(props){\n    return(\n        <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    );\n}\n\nexport default Footer","import React, { Component } from 'react';\n\nimport {Breadcrumb, BreadcrumbItem,Button, Row,Label, Col} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, Form, Errors} from 'react-redux-form';\n\n\nconst required= (val) => val && val.length;\nconst maxLength=(len) => (val) => !(val) || (val.length <= len); //Ensures that length is less than or equal to\nconst minLength = (len) => (val) => (val) && (val.length >= len); //Ensures that length is less than or equal to\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%=-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\n\n\n\n\n\nclass Contact extends Component{\n    constructor(props){\n        super(props);\n\n        \n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        // this.handleInputChange=this.handleInputChange.bind(this);\n    }\n\n    // React Redux Hanles this\n\n    // handleInputChange(event){\n    //     const target = event.target;\n    //     const value = target.type === 'checkbox' ? target.checked : target.value;\n    //     const name = target.name\n\n    //     this.setState({\n    //         [name]:value\n\n    //     });\n\n    // }\n\n    handleSubmit(values){\n        console.log(\"Current State is: \" + JSON.stringify(values))\n        alert(\"Current state is: \" + JSON.stringify(values))\n        this.props.resetFeedbackForm()\n        \n\n    }\n\n    handleBlur= (field) =>(evt)=>{\n        this.setState({\n            touched:{...this.state.touched, [field]:true}\n        });\n    }\n\n\n    // validate(firstname,lastname,telnum,email){\n    //     const errors={\n    //         firstname:'',\n    //         lastname:'',\n    //         telnum:'',\n    //         email:''\n\n\n    //     };\n\n    //     if(this.state.touched.firstname && firstname.length<3)\n    //         errors.firstname=\"First Name should be >=3 characters\";\n    //     else if (this.state.touched.firstname && firstname.length>10)\n    //         errors.firstname=\"First Name should be <=10 characters\"\n\n    //     if(this.state.touched.lastname && lastname.length<3)\n    //         errors.lastname=\"Last Name should be >=3 characters\";\n    //     else if (this.state.touched.firstname && firstname.length>10)\n    //         errors.lastname=\"Last Name should be <=10 characters\"\n\n    //     const reg = /^\\d+$/;\n    //     if(this.state.touched.telnum && !reg.test(telnum))\n    //         errors.telnum='Tel. Number should contain only numbers'\n        \n\n    //     if(this.state.touched.email && email.split('').filter(x => x==='@'.length !== 1))\n    //         errors.email=\"Email should contain an @ sign.\"\n\n\n    //     return errors;\n    // }\n\n\n\n\n\n\n    render(){\n\n        // const errors=this.validate(this.state.firstname, this.state.lastname,this.state.telnum, this.state.email)\n\n        return(\n            <div className=\"container\">\n                <Breadcrumb>\n                            <BreadcrumbItem><Link to =\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                </div>\n    \n    \n    \n    \n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n\n                        <Form model=\"feedback\" onSubmit = {(values)=>this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>FirstName</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                    placeholder=\"First Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required ,minLength:minLength(3),maxLength: maxLength(15)\n                                    }}\n                                    // value={this.state.firstname}\n                                    // valid={errors.firstname==''}\n                                    // invalid={errors.firstname !==''} \n                                    // onBlur={this.handleBlur('firstname')}\n                                    // onChange={this.handleInputChange}\n                                    />\n\n                                    <Errors \n                                    classname=\"text-danger\"\n                                    model=\".firstname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength:'Must be greater than 2 charactors',\n                                        maxLength: 'Must be 15 characters or less'\n\n                                    }}\n                                    />\n                                    {/* <FormFeedback>{errors.firstname}</FormFeedback> */}\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>LastName</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                    placeholder=\"Last Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required ,minLength:minLength(3),maxLength: maxLength(15)\n                                    }}\n                                    // value={this.state.lastname}\n                                    // valid={errors.lastname==''}\n                                    // invalid={errors.lastname !==''} \n                                    // onBlur={this.handleBlur('lastname')} \n                                    // onChange={this.handleInputChange}\n                                    />\n                                    <Errors \n                                    classname=\"text-danger\"\n                                    model=\".lastname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength:'Must be greater than 2 charactors',\n                                        maxLength: 'Must be 15 characters or less'\n\n                                    }}\n                                    />\n                                    {/* <FormFeedback>{errors.lastname}</FormFeedback> */}\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Telephone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                    placeholder=\"Tel. Number\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required ,minlength: minLength(3),maxLength: maxLength(15), isNumber\n\n                                    }}\n                                    // value={this.state.telnum}\n                                    // valid={errors.telnum==''}\n                                    // invalid={errors.telnum !==''} \n                                    // onBlur={this.handleBlur('telnum')}\n                                    // onChange={this.handleInputChange}\n                                    />\n\n                                    <Errors \n                                    classname=\"text-danger\"\n                                    model=\".telnum\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength:'Must be greater than 2 numbers',\n                                        maxLength: 'Must be 15 numbers or less'\n\n                                    }}\n                                    />\n                                    {/* <FormFeedback>{errors.telnum}</FormFeedback> */}\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\"id=\"email\" name=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required , validEmail\n\n                                    }}\n                                    // value={this.state.email}\n                                    // onBlur={this.handleBlur('email')} \n                                    // onChange={this.handleInputChange}\n                                    />\n                                    <Errors \n                                    classname=\"text-danger\"\n                                    model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        validEmail:\"Invalid Email Address\"\n                                 \n\n                                    }}\n                                    />\n                                    {/* <FormFeedback>{errors.email}</FormFeedback> */}\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset:2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" type=\"checkbox\" name=\"agree\"\n                                                className =\"form-check-input\"\n                                                // checked={this.state.agree}\n                                                // onChange={this.handleInputChange}\n                                                /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset:1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\"\n                                        // value={this.state.contactType}\n                                        // onChange={this.handleInputChange}\n                                        >\n\n                                            <option>Tel.</option>\n                                            <option>Email</option>\n\n                                    </Control.select>\n                                    \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\"p>\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\"id=\"message\" name=\"message\"\n                                    placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    // values={this.state.message}\n                                    // onChange={this.handleInputChange}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n\n                                <Col md={{size:10, offset:2}}/>\n                                <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                </Button>\n\n                            </Row>\n                            \n                        </Form>\n\n\n                    </div>\n                </div>\n\n\n\n            </div>\n        );\n\n    }\n\n    \n}\n\nexport default Contact;","import * as ActionTypes from './ActionTypes';\n// import {DISHES} from '../shared/dishes';\nimport { baseUrl } from '../shared/baseURL';\n\n//For server communication import the baseURL\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating,author,comment) => (dispatch) => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment:comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment), //Post requires you to send message in the body\n        header: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error; // when throwing an error you can have a catch down the chain\n            }\n        },\n        error =>{\n            var errmess= new Error(error.message);\n            throw error;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response))) // Will contain the updated comment\n        .catch(error => {console.log('Post comments ', error.message);\n                alert('Your comment could not be posted \\n' + error.message)})\n\n}\n\nexport const fetchDishes = () => (dispatch) => { //This is a thunk\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                }\n                else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error; // when throwing an error you can have a catch down the chain\n                }\n            },\n            error =>{\n                var errmess= new Error(error.message);\n                throw error;\n            })\n            .then(response => response.json())\n            .then(dishes => dispatch(addDishes(dishes))) // We must update to handle errors\n            .catch(error => dispatch(dishesFailed(error.message)));\n\n    // setTimeout(() => {\n    //     dispatch(addDishes(DISHES)); THiS IS REMOVED AS IT WAS SERVER SIMULATION\n    // }, 2000);\n}\n\nexport const dishesLoading=() => ({\n    type: ActionTypes.DISHES_LOADING //Returns an action of the type DISHES_LOADING\n});\n\nexport const dishesFailed=(errmess) =>({\n    type:ActionTypes.DISHES_FAILED, //Retursn an action of the type DISHES_FAILED\n    payload:errmess //Payload is an error message will be delivered as a payload.\n});\n\nexport const addDishes = (dishes) =>({ // Takes dish information as a parameters\n    type: ActionTypes.ADD_DISHES, // Returns ADD_DISHES as payload\n    payload: dishes // Returns dishes as payload\n\n});\n\nexport const fetchComments = () => (dispatch) => { //This is a thunk\n\n    return fetch(baseUrl + 'comments')\n                .then(response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n                        throw error; // when throwing an error you can have a catch down the chain\n                    }\n                },\n                error =>{\n                    var errmess= new Error(error.message);\n                    throw error;\n                })\n                .then(response => response.json())\n                .then(comments => dispatch(addComments(comments))) // We must update to handle errors\n                .catch(error => dispatch(commentsFailed(error.message)));\n    // setTimeout(() => {\n    //     dispatch(addDishes(DISHES)); THiS IS REMOVED AS IT WAS SERVER SIMULATION\n    // }, 2000);\n}\n\nexport const commentsFailed=(errmess) =>({\n    type:ActionTypes.COMMENTS_FAILED, //Retursn an action of the type DISHES_FAILED\n    payload:errmess //Payload is an error message will be delivered as a payload.\n});\n\nexport const addComments = (comments) =>({ // Takes dish information as a parameters\n    type: ActionTypes.ADD_COMMENTS, // Returns ADD_DISHES as payload\n    payload: comments // Returns dishes as payload\n\n});\n\n\nexport const fetchPromos = () => (dispatch) => { //This is a thunk\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n                .then(response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n                        throw error; // when throwing an error you can have a catch down the chain\n                    }\n                },\n                error =>{\n                    var errmess= new Error(error.message);\n                    throw error;\n                })\n                .then(response => response.json())\n                .then(promos => dispatch(addPromos(promos))) // We must update to handle errors\n                .catch(error => dispatch(promosFailed(error.message)));\n    // setTimeout(() => {\n    //     dispatch(addDishes(DISHES)); THiS IS REMOVED AS IT WAS SERVER SIMULATION\n    // }, 2000);\n}\n\nexport const promosLoading=() => ({\n    type: ActionTypes.PROMOS_LOADING //Returns an action of the type DISHES_LOADING\n});\n\nexport const promosFailed=(errmess) =>({\n    type:ActionTypes.PROMOS_FAILED, //Retursn an action of the type DISHES_FAILED\n    payload:errmess //Payload is an error message will be delivered as a payload.\n});\n\nexport const addPromos = (promos) =>({ // Takes dish information as a parameters\n    type: ActionTypes.ADD_PROMOS, // Returns ADD_DISHES as payload\n    payload: promos // Returns dishes as payload\n\n});\n\n","export const ADD_COMMENT = 'ADD_COMMENT'\nexport const DISHES_LOADING= 'DISHES_LOADING';\nexport const DISHES_FAILED='DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES'; // Want to add dishes to the store \nexport const ADD_COMMENTS= 'ADD_COMMENTS';\nexport const COMMENTS_FAILED ='COMMENTS_FAILED';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED='PROMOS_FAILED';\nexport const PROMOS_LOADING='PROMOS_LOADING';\n\n\n// REDUX THUNK\n// Adds a couple of more types\n","import React,{Component} from 'react';\nimport Menu from './MenuComponent';\nimport Home from './HomeComponent';\n\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Contact from './ContactComponent';\nimport {postComment, fetchDishes, fetchComments,fetchPromos} from '../redux/ActionCreators';\nimport {Switch, Route, Redirect,withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {actions} from 'react-redux-form';\n// import {TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\n\n\n\nconst mapStateToProps = state=> {\n\n    return {\n        dishes: state.dishes,\n        comments:state.comments,\n        promotions:state.promotions,\n        leaders:state.leaders\n\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch) => ({ // This maps the dispatches to the props\n    postComment: (dishId,rating,author,comment) => dispatch(postComment(dishId,rating,author,comment)),\n    fetchDishes:() => {dispatch(fetchDishes())},\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\n    fetchComments:() => {dispatch(fetchComments())},\n    fetchPromos:() => {dispatch(fetchPromos())}, \n    \n\n})\n\n\nclass Main extends Component {\n\n    constructor(props){\n        super(props);\n        \n\n    \n\n\n    }\n\n    componentDidMount(){\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos(); // Ensures that as soon as main component is mounted the data is fetched from server\n        \n    }\n\n\n\n  \n\n    render(){\n\n        const HomePage = () =>{\n            return(\n\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}// THUNK\n                dishesLoading={this.props.dishes.isLoading}\n                dishesErrMess={this.props.dishes.errMess}\n                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                promosLoading={this.props.promotions.isLoading}\n                promosErrMess={this.props.promotions.errMess} \n                leader={this.props.leaders.filter((leader) => leader.featured)[0]} />\n\n            );\n        }\n\n        const DishWithId = ({match}) => {\n            return(\n\n            <DishDetail dish = {this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n                isLoading={this.props.dishes.isLoading}\n                errMess={this.props.dishes.errMess}\n                comments = {this.props.comments.comments.filter((comment)=> comment.dishId === parseInt(match.params.dishId,10))}\n                commentsErrMess={this.props.comments.errMess}\n                addComment={this.props.postComment}\n\n            \n            />\n            );\n\n        }\n\n        return (\n            <div className=\"App\">\n\n                <Header/>\n                {/* <TransitionGroup>\n                    <CSSTransition key = {this.props.location.key} classNames = \"page\" timeout={300}> */}\n\n                        <Switch>\n                            <Route path=\"/home\" component={HomePage}/>\n\n                            <Route exact path=\"/menu\" component={() => <Menu dishes = {this.props.dishes}/>}/>\n                            <Route path =\"/menu/:dishId\" component={DishWithId}/>\n                            <Route exact path=\"/contactus\" component={()=> <Contact resetFeedbackForm={this.props.resetFeedbackForm}/>}/>\n                            <Redirect to=\"/home\"/>\n                        </Switch>\n\n                    {/* </CSSTransition>\n\n                </TransitionGroup> */}\n\n                \n            \n                <Footer/>\n\n            </div>\n        );\n    }       \n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n//Implementation of splitting the reducer along with action implementation.\n\nexport const Dishes = (state = {\n        isLoading:true,\n        errMess: null,\n        dishes:[]\n    },action) =>{\n\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes:action.payload};\n        \n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess:null, dishes:[]}; //Creates new object state and makes new object\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes:[]};\n\n        default:\n            return state;\n\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state={\n        errMess: null,\n        comments: []\n}, action)=> {\n    switch(action.type) {\n        \n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments:action.payload};\n\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments:[]};\n\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            comment.id = state.comments.length;\n            comment.date = new Date().toISOString();\n            return {...state, comments: state.comments.concat(comment)}; // An immutable operation on the state\n\n        default:\n            return state;\n\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n//Implementation of splitting the reducer along with action implementation.\n\nexport const Promotions = (state={\n    isLoading:true,\n    errMess: null,\n    promotions:[]\n    },action)=>{\n    switch(action.type) {\n\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions:action.payload};\n        \n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess:null, promotions:[]}; //Creates new object state and makes new object\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions:[]};\n\n        default:\n            return state;\n\n    }\n}","export const LEADERS = [\n    {\n      id: 0,\n      name: 'Peter Pan',\n      image: '/assets/images/alberto.png',\n      designation: 'Chief Epicurious Officer',\n      abbr: 'CEO',\n      featured: false,\n      description: \"Our CEO, Peter, credits his hardworking East Asian immigrant parents who undertook the arduous journey to the shores of America with the intention of giving their children the best future. His mother's wizardy in the kitchen whipping up the tastiest dishes with whatever is available inexpensively at the supermarket, was his first inspiration to create the fusion cuisines for which The Frying Pan became well known. He brings his zeal for fusion cuisines to this restaurant, pioneering cross-cultural culinary connections.\"\n    },\n    {\n      id: 1,\n      name: 'Dhanasekaran Witherspoon',\n      image: '/assets/images/alberto.png',\n      designation: 'Chief Food Officer',\n      abbr: 'CFO',\n        featured: false,\n      description: 'Our CFO, Danny, as he is affectionately referred to by his colleagues, comes from a long established family tradition in farming and produce. His experiences growing up on a farm in the Australian outback gave him great appreciation for varieties of food sources. As he puts it in his own words, Everything that runs, wins, and everything that stays, pays!'\n    },\n    {\n      id: 2,\n      name: 'Agumbe Tang',\n      image: '/assets/images/alberto.png',\n      designation: 'Chief Taste Officer',\n      abbr: 'CTO',\n        featured: false,\n      description: 'Blessed with the most discerning gustatory sense, Agumbe, our CFO, personally ensures that every dish that we serve meets his exacting tastes. Our chefs dread the tongue lashing that ensues if their dish does not meet his exacting standards. He lives by his motto, You click only if you survive my lick.'\n    },\n    {\n      id: 3,\n      name: 'Alberto Somayya',\n      image: '/assets/images/alberto.png',\n      designation: 'Executive Chef',\n      abbr: 'EC',\n      featured: true,\n      description: 'Award winning three-star Michelin chef with wide International experience having worked closely with whos-who in the culinary world, he specializes in creating mouthwatering Indo-Italian fusion experiences. He says, Put together the cuisines from the two craziest cultures, and you get a winning hit! Amma Mia!'\n    }\n  ];","// import * as ActionTypes from './ActionTypes';\nimport {LEADERS} from '../shared/leaders';\n\nexport const Leaders = (state=LEADERS,action)=>{\n    switch(action.type) {\n        default:\n            return state;\n\n    }\n}","export const InitialFeedback={\n    firstname:'',\n    lastname:'',\n    telnum:'',\n    email:'',\n    agree:false,\n    contactType: 'Tel',\n\n    message:''\n}","import React from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider }from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store= ConfigureStore();\n\nclass App extends React.Component {\n\n  \n\n  render(){\n\n  return (\n\n    <Provider store={store}>\n\n\n      <BrowserRouter>\n      \n        <div>\n        \n          <Main/>\n\n        </div>\n            \n      </BrowserRouter>\n    </Provider>\n    );\n}\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\n\n//import the createForms from react redux form\nimport {createForms} from 'react-redux-form';\n// import {Reducer, initialState} from './reducer';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback} from './forms';\n\n\n\n\nexport const ConfigureStore = () => {\n    const store = createStore( // Takes an enhancer as second parameter\n        // Reducer,\n        // initialState OLD IMPLEMENTATION ONLY ONE REDUCER\n        combineReducers({\n            dishes: Dishes,\n            comments:Comments,\n            promotions: Promotions,\n            leaders:Leaders,\n            ...createForms( // React redux forms fills actiontypes on its own\n                {feedback:InitialFeedback}\n            )\n        }),\n        applyMiddleware(thunk,logger) //Being supplied into the store as enhancers, they become available\n    );\n\n    return store;\n    \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}